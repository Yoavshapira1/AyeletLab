from matplotlib import pyplot as plt
import pyxdf as xdf
import numpy as np


def plot_data(filename : str) -> None:
    """
    Plot the data saved from a LSL run
    The data should be in .xdf format, generated by the LSL labRecorder.
    The shape of the data is as follows:
        |>data is list of streams [stream1, stream...], We only interested in stream=0
        |
        ----|>data[0] is a dictionary of attributes.
            |
            |--->data[0]['time_series'] is the time series of the session,
            |        it's shape: (T, CH), where T - the total interval, and CH - the number of channels.
            |        NOTE: if CH == 2, meanly two channels recorded, than only 1 hand was involved.
            |--->data[0]['type'] is a dictionary contains the information:
                {
                "Grid" : Specify the grid was in used in the session
                "Origin" : Specify the origin was used in the session
                }
    :param filename: path to the file contains the data
    """
    data, header = xdf.load_xdf(filename)

    # extract data in shape of (N, T)where N is number of channels and T is total interval
    numeric_data = data[0]['time_series'].T
    interval = np.arange(numeric_data.shape[1])
    print(numeric_data.shape[1])
    exit()

    # extract x and y: even indices in the data are the x coordinates and odd are the y coordinates
    x_coor = numeric_data[::2, :]   # even indices <=> odd places of rows
    y_coor = numeric_data[1::2, :]  # odd indices <=> even places of rows

    # plot each channel with an appropriate label
    for ch in enumerate(zip (x_coor, y_coor)):
        plt.plot(interval, ch[1][0], label='ch %d, x axis' % (ch[0]+1))
        plt.plot(interval, ch[1][1], label='ch %d, y axis' % (ch[0]+1))
        plt.legend()
    plt.show()


if __name__ == "__main__":
    demo_data_filename = r'C:\Users\yoavs\Documents\AyeletLab\AyeletLab\Tapper\Data\yo_0\Circles_1.csv'
    plot_data(demo_data_filename)